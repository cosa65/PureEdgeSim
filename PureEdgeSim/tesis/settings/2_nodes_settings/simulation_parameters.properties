# Simulation Parameters File

simulation_time=10
initialization_time=30
update_interval=1
pause_length=3

auto_close_real_time_charts=true
# Higher value than 1 helps to avoid lag
charts_update_interval=2
save_charts=true

# simulation area/map (meters)
length=200
width=200

edge_datacenters_coverage=200

# The registry in this example is enabled. This means that when a task is offloaded, the corresponding container will be pulled from the registry to execute that task.
enable_registry=false
# We use a caching strategy in this example, in which the frequently accessed container images are cached within the clusters of devices, which should decrease WAN utilization and delays. You can change the value below to CLOUD (instead of CACHE) to see the difference. 
registry_mode=CACHE
#registry_mode=CLOUD

# In this example, edge devices are divided to clusters, in which each cluster head is responsible for making the offloading decisions. To do this, first we need to enable the option below.
enable_orchestrators=true
# We enter the same name as in Example7ClusteringDevice.java, which is "CLUSTER", otherwise cluster-heads (i.e., orchestrators) selections will not be done.
deploy_orchestrator=CLUSTER
#deploy_orchestrator=CLOUD

wait_for_all_tasks=true
batch_size=100

save_log_file=true
clear_output_folder=false
deep_log_enabled=false

edge_device_counter_size=100

# cosa65: Seems to make file transfers instantaneous if not realistic, but not sure
realistic_network_model=true
network_update_interval=1

# Must be true in this scenario, since all devices are located in same area. Moreover, this will make it easier to compare the caching (CACHE) strategy with the traditional one that pull containers from the remote registry (i.e. the CLOUD strategy)
one_shared_wan_network = true

# in mbps
wan_bandwidth = 300
wan_latency = 0.3
wan_nanojoules_per_bit = 46.7 

man_bandwidth = 1000
man_latency = 0.01
man_nanojoules_per_bit = 0 

# in mbps
wifi_bandwidth = 300
wifi_device_transmission_nanojoules_per_bit = 283.17
wifi_device_reception_nanojoules_per_bit = 137.01
wifi_access_point_transmission_nanojoules_per_bit = 23.8
wifi_access_point_reception_nanojoules_per_bit = 23.8
wifi_latency = 0.005

ethernet_bandwidth = 1000
ethernet_nanojoules_per_bit = 40
ethernet_latency = 0.002

cellular_bandwidth = 100
cellular_device_transmission_nanojoules_per_bit = 438.4
cellular_device_reception_nanojoules_per_bit = 51.97
cellular_base_station_nanojoules_per_bit_up_link = 6200
cellular_base_station_nanojoules_per_bit_down_link = 20500
cellular_latency = 0.03

# We only use edge devices in this scenario to perform tasks.
orchestration_architectures=MIST_ONLY
orchestration_algorithms=RANKING
#orchestration_algorithms=TRADE_OFF
#orchestration_algorithms=ROUND_ROBIN

edge_devices_range=10

parallel_simulation=false
#display_real_time_charts=true

#parallel_simulation=true
display_real_time_charts=true

#min_number_of_edge_devices=100
#max_number_of_edge_devices=100
min_number_of_edge_devices=2
max_number_of_edge_devices=2
#min_number_of_edge_devices=50
#max_number_of_edge_devices=50